{"version":3,"sources":["next-weight-random.js"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"next-weight-random.js","sourcesContent":["(function () {\n  var global = global || this || window || Function('return this')();\n  var nx = global.nx || require('@feizheng/next-js-core2');\n\n  nx.weightRandom = function (inSpec) {\n    var i, j, table = [];\n    var precision = 1;\n\n    nx.forIn(inSpec, function (_, value) {\n      var val = String(value).split('.')[1];\n      precision = Math.max(precision, val.length);\n    });\n\n    var size = Math.pow(10, Math.min(precision, 3));\n\n\n    for (i in inSpec) {\n      // The constant 10 below should be computed based on the\n      // weights in the spec for a correct and optimal table size.\n      // E.g. the spec {0:0.999, 1:0.001} will break this impl.\n      for (j = 0; j < inSpec[i] * size; j++) {\n        table.push(i);\n      }\n    }\n\n    return function () {\n      return table[\n        Math.floor(Math.random() * table.length)\n      ];\n    };\n  };\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = nx.weightRandom;\n  }\n})();\n"]}